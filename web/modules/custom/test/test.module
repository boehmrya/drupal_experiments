<?php

use Drupal\Core\Render\Markup;
use Drupal\block_content\Entity\BlockContent;

/**
 * Implements hook_theme().
 */
function test_theme($existing, $type, $theme, $path) {
  return [
    'my_template' => [
      'variables' => [
        'test_var' => [],
      ],
    ],
  ];
}

/*
function test_block_content_view_alter(array &$build, BlockContent $custom_block) {
  //dpm($build);
  //dpm($custom_block);

  //$build['body'][0]['#text'] = '<p>New Text</p>';

  if ($build['#view_mode'] == 'full') {

    // Change its weight.
    //$build['an_additional_field']['#weight'] = -10;

    // Add a #post_render callback to act on the rendered HTML of the entity.
    $build['#post_render'][] = '_test_block_post_render';
    //$build['#pre_render'][] = '_test_block_pre_render';

  }
}
*/

/*
function _test_block_pre_render($build) {

  $build['simple'] = [
    '#markup' => '<p>This page contains examples of various content elements described using render arrays. Read the code and comments in \Drupal\render_example\Controller\RenderExampleController::arrays() for more information</p>',
    '#description' => 'Example of using #markup',
    '#weight' => -10,
  ];

  $build['body']['#weight'] = -11;

  return $build;
}

function _test_block_post_render($markup, $build) {
  $markup = $markup . '<p>Test</p>';
  return $markup;
}*/

function test_block_content_presave(Drupal\Core\Entity\EntityInterface $entity) {

  //dpm($entity->getFields());

  $new_body = $entity->get('body')->getValue();
  $old_body = $entity->original->get('body')->getValue();

  if ($new_body != $old_body) {
    // send email notification
  }
}
